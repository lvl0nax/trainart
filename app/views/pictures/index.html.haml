/ start gallery HTML containers
.navigation-container
  #thumbs.navigation
    %a.pageLink.prev{href: '#', style: 'visibility: hidden;', title: 'Предыдущая'}
    %ul.thumbs.noscript
      -@pictures.each do |photo|
        %li
          %a.thumb{href: photo.image_url(:large)}
            %img{alt: photo.alt, src: photo.image_url(:thumb)}/
          .caption
            .image-title.portfolio_two
              = photo.title

    %a.pageLink.next{href: '#', style: 'visibility: hidden;', title: 'Следующая'}
.content
  .slideshow-container
    #loading.loader
    #slideshow.slideshow
    #controls.controls.portfolio_two
    #caption.caption-container
/ end gallery HTML containers


%script{src: "/assets/js/jquery.easing-sooper.js", type: "text/javascript"}
%script{src: "/assets/js/jquery.sooperfish.js", type: "text/javascript"}
:javascript
  $(document).ready(function() {
    $('ul.sf-menu').sooperfish();
  });
%script{src: "/assets/js/jquery.galleriffic.js", type: "text/javascript"}
%script{src: "/assets/js/jquery.opacityrollover.js", type: "text/javascript"}
:javascript
  jQuery(document).ready(function($) {
    // we only want these styles applied when javascript is enabled
    $('div.content').css('display', 'block');
    // initially set opacity on thumbs and add additional styling for hover effect on thumbs
    var onMouseOutOpacity = 0.67;
    $('#thumbs ul.thumbs li, div.navigation a.pageLink').opacityrollover({
      mouseOutOpacity:   onMouseOutOpacity,
      mouseOverOpacity:  1.0,
      fadeSpeed:         'fast',
      exemptionSelector: '.selected'
    });
    // initialize advanced galleriffic gallery
    var gallery = $('#thumbs').galleriffic({
      delay:                     3500,
      numThumbs:                 10,
      preloadAhead:              10,
      enableTopPager:            false,
      enableBottomPager:         false,
      imageContainerSel:         '#slideshow',
      controlsContainerSel:      '#controls',
      captionContainerSel:       '#caption',
      loadingContainerSel:       '#loading',
      renderSSControls:          true,
      renderNavControls:         true,
      playLinkText:              'Play Slideshow',
      pauseLinkText:             'Pause Slideshow',
      prevLinkText:              'Previous Photo',
      nextLinkText:              'Next Photo',
      nextPageLinkText:          'Next',
      prevPageLinkText:          'Prev',
      enableHistory:             true,
      autoStart:                 false,
      syncTransitions:           true,
      defaultTransitionDuration: 900,
      onSlideChange:             function(prevIndex, nextIndex) {
        // 'this' refers to the gallery, which is an extension of $('#thumbs')
        this.find('ul.thumbs').children()
          .eq(prevIndex).fadeTo('fast', onMouseOutOpacity).end()
          .eq(nextIndex).fadeTo('fast', 1.0);

        // update the photo index display
        this.$captionContainer.find('div.photo-index')
          .html('Photo '+ (nextIndex+1) +' of '+ this.data.length);
      },
      onPageTransitionOut:       function(callback) {
        this.fadeTo('fast', 0.0, callback);
      },
      onPageTransitionIn:        function() {
        var prevPageLink = this.find('a.prev').css('visibility', 'hidden');
        var nextPageLink = this.find('a.next').css('visibility', 'hidden');
        // show appropriate next / prev page links
        if (this.displayedPage > 0)
          prevPageLink.css('visibility', 'visible');
        var lastPage = this.getNumPages() - 1;
        if (this.displayedPage < lastPage)
          nextPageLink.css('visibility', 'visible');
        this.fadeTo('fast', 1.0);
      }
    });
    // event handlers for custom next / prev page links
    gallery.find('a.prev').click(function(e) {
      gallery.previousPage();
      e.preventDefault();
    });
    gallery.find('a.next').click(function(e) {
      gallery.nextPage();
      e.preventDefault();
    });
  });
